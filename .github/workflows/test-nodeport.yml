name: Integration Test for NodePort Service Type

on: workflow_call

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'read'

    steps:
      - name: Set env and tools
        run: |
          echo "TESTNAMESPACE=op-test-nodeport-$(date +%s)" >> $GITHUB_ENV

      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1.0.0'
        with:
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          access_token_lifetime: 600s

      - name: Use the GKE Autopilot test cluster
        uses: 'google-github-actions/get-gke-credentials@v1.0.0'
        with:
          cluster_name: 'dev-integrationtesting'
          location: 'us-central1'

      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy Operator
        run: |
          sleep 20;
          for i in {1..3}; do
            kubectl cluster-info
            kubectl get pods -n kube-system
            echo "current-context:" $(kubectl config current-context)
            echo "environment-kubeconfig:" ${KUBECONFIG}
            kubectl get ns pubsubplus-operator-system || kubectl create ns pubsubplus-operator-system
            if kubectl get deployment pubsubplus-eventbroker-operator -n pubsubplus-operator-system; then
              echo "pubsubplus-eventbroker-operator is already deployed"
              break
            else
              kubectl apply -f <(kubectl create secret generic regcred --from-file=.dockerconfigjson=${HOME}/.docker/config.json --type=kubernetes.io/dockerconfigjson -n pubsubplus-operator-system --dry-run=client -o yaml)
              make deploy | grep 'created \| configured'
              kubectl rollout status deployment pubsubplus-eventbroker-operator -n pubsubplus-operator-system --timeout=240s
              if [ $? -eq 0 ]; then
                break
              else
                echo "Rollout status check failed, retrying in 20 seconds..."
                sleep 20
              fi
            fi
          done

      - name: Testing NodePort with Fixed Port Assignment
        run: |
          kubectl create ns $TESTNAMESPACE && kubectl config set-context --current --namespace=$TESTNAMESPACE
          kubectl apply -f ci/manifests/eventbroker-nonha-nodeport.yaml | grep "test-nonha-nodeport created"
          sleep 25 ; kubectl get all          
          for i in {1..3}; do
            if kubectl wait pods --selector app.kubernetes.io/instance=test-nonha-nodeport --for condition=Ready --timeout=120s; then
              echo "Pods are ready."
              break
            else
              echo "Waiting for pods failed, retrying in 10 seconds..."
              kubectl describe pods --selector app.kubernetes.io/instance=test-nonha-nodeport
              sleep 10
            fi
          done
          
          # Verify service type is NodePort
          kubectl get service test-nonha-nodeport-pubsubplus -o jsonpath='{.spec.type}' | grep "NodePort"
          
          # Verify nodePort values are set correctly
          SEMP_NODEPORT=$(kubectl get service test-nonha-nodeport-pubsubplus -o jsonpath='{.spec.ports[?(@.name=="tcp-semp")].nodePort}')
          SMF_NODEPORT=$(kubectl get service test-nonha-nodeport-pubsubplus -o jsonpath='{.spec.ports[?(@.name=="tcp-smf")].nodePort}')
          WEB_NODEPORT=$(kubectl get service test-nonha-nodeport-pubsubplus -o jsonpath='{.spec.ports[?(@.name=="tcp-web")].nodePort}')
          
          echo "SEMP NodePort: $SEMP_NODEPORT, Expected: 30080"
          echo "SMF NodePort: $SMF_NODEPORT, Expected: 30555"
          echo "WEB NodePort: $WEB_NODEPORT, Expected: 30008"
          
          [ "$SEMP_NODEPORT" = "30080" ] && echo "SEMP NodePort test passed" || echo "SEMP NodePort test failed"
          [ "$SMF_NODEPORT" = "30555" ] && echo "SMF NodePort test passed" || echo "SMF NodePort test failed"
          [ "$WEB_NODEPORT" = "30008" ] && echo "WEB NodePort test passed" || echo "WEB NodePort test failed"
          
          # Test connectivity through NodePort
          NODE_IP=$(kubectl get nodes -o jsonpath='{.items[0].status.addresses[?(@.type=="InternalIP")].address}')
          echo "Using node IP: $NODE_IP"
          
          # Test SMF connectivity through NodePort
          kubectl port-forward svc/test-nonha-nodeport-pubsubplus 55555:55555 &
          sleep 5
          curl -O https://sftp.solace.com/download/SDKPERF_C_LINUX64
          tar -xvf SDKPERF_C_LINUX64
          pubSubTools/sdkperf_c -cip=tcp://localhost:55555 -mn=1000 -mr=0 -ptl=t1 -stl=t1 | grep "Total Messages"
          
          kubectl delete eventbroker test-nonha-nodeport | grep deleted

      - name: Delete broker deployment
        run: |
          kubectl delete ns $TESTNAMESPACE --ignore-not-found
