name: Integration Test for Helm to Operator Upgrade

on: workflow_call

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'read'

    steps:
      - name: Set env and tools
        run: |
          echo "TESTNAMESPACE=op-test-helm-upgrade-$(date +%s)" >> $GITHUB_ENV

      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1.0.0'
        with:
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          access_token_lifetime: 600s

      - name: Use the GKE Autopilot test cluster
        uses: 'google-github-actions/get-gke-credentials@v1.0.0'
        with:
          cluster_name: 'dev-integrationtesting'
          location: 'us-central1'

      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setting up kubeconfig ENV for Github Chaos Action
        run: echo ::set-env name=KUBE_CONFIG_DATA::$(base64 -w 0 ~/.kube/config)
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true

      - name: Deploy Operator
        run: |
          echo "starting deployment"
          for i in {1..3}; do
          kubectl cluster-info
          kubectl get pods -n kube-system
          echo "current-context:" $(kubectl config current-context)
          echo "environment-kubeconfig:" ${KUBECONFIG}
          kubectl get ns pubsubplus-operator-system || kubectl create ns pubsubplus-operator-system
          if kubectl get deployment pubsubplus-eventbroker-operator -n pubsubplus-operator-system; then
           echo "pubsubplus-eventbroker-operator is already deployed"
           break
          else
           kubectl apply -f <(kubectl create secret generic regcred --from-file=.dockerconfigjson=${HOME}/.docker/config.json --type=kubernetes.io/dockerconfigjson -n pubsubplus-operator-system --dry-run=client -o yaml)
           make deploy | grep 'created \| configured'
           kubectl rollout status deployment pubsubplus-eventbroker-operator -n pubsubplus-operator-system --timeout=240s
           if [ $? -eq 0 ]; then
             break
           else
             echo "Rollout status check failed, retrying in 20 seconds..."
             sleep 20
           fi
          fi
          done


      - name: Testing the Operator - Upgrade a nonHA Helm deployment to Operator
        run: |
          kubectl create ns $TESTNAMESPACE && kubectl config set-context --current --namespace=$TESTNAMESPACE
          curl -O https://sftp.solace.com/download/SDKPERF_C_LINUX64
          tar -xvf SDKPERF_C_LINUX64
          openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout tls.key -out tls.crt -subj "/CN=*"
          kubectl create secret tls test-tls --key="tls.key" --cert="tls.crt"
          helm repo add solacecharts https://solaceproducts.github.io/pubsubplus-kubernetes-helm-quickstart/helm-charts
          helm install my-release solacecharts/pubsubplus-dev --set solace.size=dev,solace.redundancy=false,solace.podModifierEnabled=true,tls.enabled=true,tls.serverCertificatesSecret=test-tls,solace.usernameAdminPassword=admin
          kubectl describe pods
          echo "Waiting for broker to become active"          
          while true; do
            if kubectl get pods --show-labels | grep pubsubplus-dev-0 | grep -m 1 -E '1/1'; then
               break
            else
               echo "Not ready"
               kubectl describe pods
               echo "Retrying in 25 seconds..."
               sleep 25
            fi
          done
          helm test my-release | grep Phase | grep Succeeded
          kubectl get statefulset,svc,pods,pvc,pv --show-labels
          kubectl port-forward svc/my-release-pubsubplus-dev 55566:55555 &
          kubectl port-forward svc/my-release-pubsubplus-dev 55455:55443 &
          sleep 5
          pubSubTools/sdkperf_c -cip=tcp://localhost:55566 -mn=1000 -mr=0 -ptl=t1 -stl=t1 | grep "Total Messages"
          pubSubTools/sdkperf_c -cip=tcps://localhost:55455 -mn=1000 -mr=0 -ptl=t1 -stl=t1 | grep "Total Messages"
          echo "Helm release for broker working...uninstalling to upgrade to operator"
          bash ci/scripts/uninstall-helm-broker.sh my-release default
          sleep 25 ; kubectl get all
          kubectl apply -f ci/manifests/eventbroker-nonha-upgrade.yaml | grep "test-nonha created"
          sleep 25 ; kubectl get all
          kubectl wait pods --selector app.kubernetes.io/instance=test-nonha --for condition=Ready --timeout=120s
          kubectl get po --show-labels | grep test-nonha | grep "1/1"
          kubectl get po --show-labels | grep test-nonha | grep active=true
          kubectl get sts | grep test-nonha
          kubectl port-forward svc/test-nonha-pubsubplus 55555:55555 &
          kubectl port-forward svc/test-nonha-pubsubplus 55443:55443 &
          sleep 5
          pubSubTools/sdkperf_c -cip=tcp://localhost:55555 -mn=1000 -mr=0 -ptl=t1 -stl=t1 | grep "Total Messages"
          pubSubTools/sdkperf_c -cip=tcps://localhost:55443 -mn=10000 -mr=0 -ptl=t1 -stl=t1 | grep "Total Messages"
          # TODO extract secret BROKER_PASSWORD=$(kubectl get secret broker-secret  -o "jsonpath={.data.username_admin_password}" -n default | base64 -d )
          # verify SEMP over TLS
          # Example: curl -k -sS -u admin:$BROKER_PASSWORD https://$url:1943/SEMP -d "<rpc><show><config-sync></config-sync></show></rpc>
          sleep 50 ; kubectl get all
          kubectl wait pods --selector app.kubernetes.io/component=metricsexporter --for condition=Ready --timeout=120s
          kubectl port-forward svc/test-nonha-pubsubplus-prometheus-metrics 9629:9628 &
          sleep 1
          curl localhost:9629 | grep Exporter
          kubectl delete eventbroker test-nonha | grep deleted

      - name: Delete broker deployment
        run: |        
          kubectl delete ns $TESTNAMESPACE --ignore-not-found
